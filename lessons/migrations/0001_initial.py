# Generated by Django 4.1.3 on 2022-12-08 16:41

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import lessons.models.mixins
import multiselectfield.db.fields
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, validators=[django.core.validators.EmailValidator(code='invalid', message='Please enter a valid e-mail!')], verbose_name='Email')),
                ('first_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator(message='Please enter a valid name!', regex=re.compile('^(?:[a-zA-ZÀ-ž]|-|\\s)+$'))], verbose_name='First name')),
                ('last_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator(message='Please enter a valid name!', regex=re.compile('^(?:[a-zA-ZÀ-ž]|-|\\s)+$'))], verbose_name='Last name')),
                ('is_staff', models.BooleanField(default=False)),
                ('instrument', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Piano', 'Piano'), ('Guitar', 'Guitar'), ('Drums', 'Drums'), ('Violin', 'Violin'), ('Trumpet', 'Trumpet'), ('Flute', 'Flute'), ('Harp', 'Harp')], max_length=1000, verbose_name='Interested in teaching? Select the following instruments that could be taught.')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Account')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            bases=(lessons.models.mixins.GroupRegistrationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Account')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admission', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fulfilled', models.BooleanField(default=False)),
                ('day', models.TextField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday')),
                ('instrument', models.TextField(choices=[('Piano', 'Piano'), ('Guitar', 'Guitar'), ('Drums', 'Drums'), ('Violin', 'Violin'), ('Trumpet', 'Trumpet'), ('Flute', 'Flute'), ('Harp', 'Harp')], default='Piano')),
                ('time', models.TimeField(default=django.utils.timezone.now)),
                ('number_of_lessons', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of Lessons')),
                ('interval', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Interval (weeks)')),
                ('duration', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(60), django.core.validators.StepValueValidator(15)], verbose_name='Duration (minutes)')),
                ('title', models.CharField(default='Music Lesson', max_length=25)),
                ('information', models.CharField(blank=True, max_length=280, verbose_name='Further Information')),
                ('price', models.DecimalField(decimal_places=2, default=10.0, max_digits=10, validators=[django.core.validators.MinValueValidator(5.0)])),
                ('start_type', models.TextField(choices=[('Term', 'By Term'), ('Date', 'By Date')], default='Term')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('clients', models.ManyToManyField(related_name='enrolled_school', through='lessons.Admission', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(lessons.models.mixins.AdmissionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.lesson')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.school')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.school')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.AddField(
            model_name='school',
            name='current_term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='lessons.term'),
        ),
        migrations.AddField(
            model_name='school',
            name='director',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_school', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ScheduledLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.lesson')),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.school'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='start_term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lessons.term'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='admission',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.school'),
        ),
        migrations.AlterUniqueTogether(
            name='admission',
            unique_together={('school', 'client')},
        ),
    ]
